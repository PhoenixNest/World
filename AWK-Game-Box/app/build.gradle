plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // Parcelize Models
    id 'kotlin-parcelize'

    // Room
    id 'kotlin-kapt'

    // Dagger Hilt
    id 'com.google.dagger.hilt.android'

    // Navigation SafeArgs
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    namespace 'io.dev.android.game'
    compileSdk 33

    defaultConfig {
        applicationId "io.dev.android.game"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "${rootProject.ext.compose_compiler_version}"
    }
    sourceSets {
        main {
            kotlin {
                srcDirs += 'build/generated/source/navigation-args'
            }
        }
    }
    buildFeatures {
        compose true
        viewBinding true
        dataBinding true
    }
    kapt {
        correctErrorTypes true
    }
}

dependencies {

    implementation "androidx.core:core-ktx:${rootProject.ext.kotlin_core_version}"
    implementation "androidx.appcompat:appcompat:${rootProject.ext.appcompat_version}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.constraintlayout_version}"
    testImplementation "junit:junit:${rootProject.ext.junit_version}"
    androidTestImplementation "androidx.test.ext:junit:${rootProject.ext.junit_ext_version}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.ext.espresso_ui_test_version}"

    // Compose Ui
    def composeBom = platform("androidx.compose:compose-bom:${rootProject.ext.compose_bom_version}")
    implementation composeBom
    androidTestImplementation composeBom

    // Material Design
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material'
    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    // Optional - Integration with activities
    implementation "androidx.activity:activity-compose:${rootProject.ext.compose_activity_version}"
    // Optional - Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:${rootProject.ext.compose_viewmodel_version}"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:${rootProject.ext.navigation_version}"
    implementation "androidx.navigation:navigation-compose:${rootProject.ext.navigation_version}"
    implementation "androidx.navigation:navigation-ui-ktx:${rootProject.ext.navigation_version}"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${rootProject.ext.lifecycle_ktx_version}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${rootProject.ext.lifecycle_ktx_version}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${rootProject.ext.lifecycle_ktx_version}"
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.lifecycle_ext_version}"

    // Datastore
    implementation "androidx.datastore:datastore:${rootProject.ext.datastore_version}"
    implementation "androidx.datastore:datastore-preferences:${rootProject.ext.datastore_version}"

    // Room
    implementation "androidx.room:room-runtime:${rootProject.ext.room_version}"
    implementation "androidx.room:room-ktx:${rootProject.ext.room_version}"
    annotationProcessor "androidx.room:room-compiler:${rootProject.ext.room_version}"
    androidTestImplementation "androidx.room:room-testing:${rootProject.ext.room_version}"
    kapt "androidx.room:room-compiler:${rootProject.ext.room_version}"

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:${rootProject.ext.dagger_hilt_version}"
    kapt "com.google.dagger:hilt-compiler:${rootProject.ext.dagger_hilt_version}"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${rootProject.ext.kotlinx_coroutines_version}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${rootProject.ext.kotlinx_coroutines_version}"

    /* ======================== Third-party Extension ======================== */

    // Gson
    implementation "com.google.code.gson:gson:${rootProject.ext.gson_version}"

    // Recyclerview-Animators
    implementation "jp.wasabeef:recyclerview-animators:${rootProject.ext.recyclerview_animators_version}"

    // Image Loading library
    implementation "io.coil-kt:coil:${rootProject.ext.coil_version}"
}