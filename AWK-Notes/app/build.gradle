plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // Room
    id 'kotlin-kapt'

    // Dagger Hilt
    id 'com.google.dagger.hilt.android'

}

android {
    namespace 'io.dev.android.composer.notes'
    compileSdk 33

    defaultConfig {
        applicationId "io.dev.android.composer.notes"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "${rootProject.ext.compose_compiler_version}"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // Compose Ui
    def composeBom = platform("androidx.compose:compose-bom:${rootProject.ext.compose_bom_version}")
    implementation composeBom
    androidTestImplementation composeBom

    // Material Design
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material'
    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    // Optional - Integration with activities
    implementation "androidx.activity:activity-compose:${rootProject.ext.compose_activity_version}"
    // Optional - Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:${rootProject.ext.compose_viewmodel_version}"

    // Datastore
    implementation "androidx.datastore:datastore:${rootProject.ext.datastore_version}"
    implementation "androidx.datastore:datastore-preferences:${rootProject.ext.datastore_version}"

    // Room
    implementation "androidx.room:room-runtime:${rootProject.ext.room_version}"
    implementation "androidx.room:room-ktx:${rootProject.ext.room_version}"
    annotationProcessor "androidx.room:room-compiler:${rootProject.ext.room_version}"
    androidTestImplementation "androidx.room:room-testing:${rootProject.ext.room_version}"
    kapt "androidx.room:room-compiler:${rootProject.ext.room_version}"

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:${rootProject.ext.dagger_hilt_version}"
    kapt "com.google.dagger:hilt-compiler:${rootProject.ext.dagger_hilt_version}"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${rootProject.ext.kotlinx_coroutines_version}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${rootProject.ext.kotlinx_coroutines_version}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${rootProject.ext.kotlinx_coroutines_version}"

}